[{"/Users/bbq12340/dev/twitter_clone/src/index.js":"1","/Users/bbq12340/dev/twitter_clone/src/components/App.js":"2","/Users/bbq12340/dev/twitter_clone/src/components/Router.js":"3","/Users/bbq12340/dev/twitter_clone/src/routes/Home.js":"4","/Users/bbq12340/dev/twitter_clone/src/routes/Auth.js":"5","/Users/bbq12340/dev/twitter_clone/src/myBase.js":"6","/Users/bbq12340/dev/twitter_clone/src/components/Navigation.js":"7","/Users/bbq12340/dev/twitter_clone/src/routes/Profile.js":"8","/Users/bbq12340/dev/twitter_clone/src/components/Tweet.js":"9"},{"size":229,"mtime":1611109415297,"results":"10","hashOfConfig":"11"},{"size":730,"mtime":1612145713631,"results":"12","hashOfConfig":"11"},{"size":1023,"mtime":1612161759805,"results":"13","hashOfConfig":"11"},{"size":2799,"mtime":1612161135295,"results":"14","hashOfConfig":"11"},{"size":2338,"mtime":1611198832042,"results":"15","hashOfConfig":"11"},{"size":651,"mtime":1612153026517,"results":"16","hashOfConfig":"11"},{"size":391,"mtime":1611119140803,"results":"17","hashOfConfig":"11"},{"size":773,"mtime":1612161836534,"results":"18","hashOfConfig":"11"},{"size":2001,"mtime":1612155642843,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"3ao5vj",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"/Users/bbq12340/dev/twitter_clone/src/index.js",[],["42","43"],"/Users/bbq12340/dev/twitter_clone/src/components/App.js",[],"/Users/bbq12340/dev/twitter_clone/src/components/Router.js",[],"/Users/bbq12340/dev/twitter_clone/src/routes/Home.js",["44"],"import { dbService, storageService } from \"myBase\";\nimport React, { useEffect, useState } from \"react\";\nimport Tweet from \"components/Tweet\";\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Home = ({userObj}) => {\n    const [tweet, setTweet] = useState(\"\");\n    const [dbTweets, setDbTweets] = useState([]);\n    const [attachment, setAttachment] = useState(\"\");\n    \n    \n    useEffect(() => {\n        dbService.collection(\"tweets\").onSnapshot((snapshot) => {\n            const tweetsArray = snapshot.docs.map((doc) => ({\n                id: doc.id,\n                ...doc.data()\n            }));\n            setDbTweets(tweetsArray);\n        });\n    },[]);\n    const onSubmit = async(event) => {\n        event.preventDefault();\n        // if there is photo -> upload photo -> save url into the tweet\n        let attachmentUrl = \"\";\n        if (attachment !== \"\") {\n            const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const response = await fileRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n        const tweetObj = {\n            text: tweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl\n        }\n        await dbService.collection(\"tweets\").add(tweetObj);\n        setTweet(\"\");\n        setAttachment(\"\");\n    };\n    const onChange = (event) => {\n        const {target: {value}} = event;\n        setTweet(value);\n    };\n    const onFileChange = (event) => {\n        const {target: {files}} = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            console.log(finishedEvent);\n            const {currentTarget: {result}} = finishedEvent;\n            setAttachment(result);\n        }\n        reader.readAsDataURL(theFile);\n    };\n    const onClearAttachment = () => setAttachment();\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <input type=\"text\" placeholder=\"What's on yur mind?\" maxLength={120} onChange={onChange} value={tweet}/>\n                <input type=\"file\" accept=\"image/*\" onChange={onFileChange} value={attachment}/>\n                <input type=\"submit\" value=\"tweet!\"/>\n                {attachment && (\n                    <div>\n                        <img src={attachment} width=\"50px\" height=\"50px\" />\n                        <button onClick={onClearAttachment}>Clear</button>\n                    </div>\n                )}\n            </form>\n            <div>\n                {dbTweets.map((dbTweet) => (\n                    <Tweet key={dbTweet.id} tweetObj={dbTweet} isOwner={dbTweet.creatorId === userObj.uid}/>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Home;","/Users/bbq12340/dev/twitter_clone/src/routes/Auth.js",[],"/Users/bbq12340/dev/twitter_clone/src/myBase.js",[],"/Users/bbq12340/dev/twitter_clone/src/components/Navigation.js",[],"/Users/bbq12340/dev/twitter_clone/src/routes/Profile.js",["45"],"import { authService, dbService } from \"myBase\";\nimport React, { useEffect } from \"react\"; \nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({userObj}) => {\n    const history = useHistory();\n    const onLogOutClick = () => {\n        authService.signOut();   \n        history.push(\"/\");\n    }\n    const getMyTweets = async() => {\n        const tweets = await dbService\n            .collection(\"tweets\")\n            .where(\"creatorId\", \"==\", userObj.uid)\n            .orderBy(\"createdAt\")\n            .get();\n        console.log(tweets.docs.map((doc) => doc.data()));\n    }\n    useEffect(() => {\n        getMyTweets();\n    }, []);\n    return (\n        <>\n            <button onClick={onLogOutClick}>Log Out</button>\n        </>\n    )\n}\nexport default Profile;","/Users/bbq12340/dev/twitter_clone/src/components/Tweet.js",["46"],"import { dbService, storageService } from \"myBase\";\nimport React, { useState } from \"react\";\n\nconst Tweet = ({tweetObj, isOwner}) => {\n    const [editing, setEditing] = useState(false);\n    const [newTweet, setNewTweet] = useState(tweetObj.text);\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure you want to delete this tweet?\");\n        if (ok) {\n            //delete\n            await dbService.doc(`tweets/${tweetObj.id}`).delete();\n            await storageService.refFromURL(tweetObj.attachmentUrl).delete();\n        }\n    };\n    const toggleEditing = () => setEditing((prev) => !prev);\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`tweets/${tweetObj.id}`).update({text:newTweet});\n        setEditing(false);\n    }\n    const onChange = (event) => {\n        const {target: {value}} = event;\n        setNewTweet(value);\n    };\n    return (\n        <div>\n            {\n                editing ? (\n                    <>\n                        <form onSubmit={onSubmit}>\n                            <input value={newTweet} type=\"text\" placeholder=\"Edit your tweet\" required onChange={onChange}/>\n                            <input type=\"submit\" value=\"Update Tweet\"/>\n                        </form>\n                        <button onClick={toggleEditing}>Cancel</button>\n                    </>\n                ):(\n                    <>    \n                        <h4>{tweetObj.text}</h4>\n                        {tweetObj.attachmentUrl && <img src={tweetObj.attachmentUrl} width=\"50px\" height=\"50px\"/>}\n                        {isOwner && (\n                            <>\n                                <button onClick={onDeleteClick}>Delete Tweet</button>\n                                <button onClick={toggleEditing}>Edit Tweet</button>\n                            </>\n                        )}\n                    </>\n                )\n            }\n        </div>\n    )\n}\nexport default Tweet;",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":64,"column":25,"nodeType":"53","endLine":64,"endColumn":76},{"ruleId":"54","severity":1,"message":"55","line":21,"column":8,"nodeType":"56","endLine":21,"endColumn":10,"suggestions":"57"},{"ruleId":"51","severity":1,"message":"52","line":39,"column":52,"nodeType":"53","endLine":39,"endColumn":114},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyTweets'. Either include it or remove the dependency array.","ArrayExpression",["60"],"no-global-assign","no-unsafe-negation",{"desc":"61","fix":"62"},"Update the dependencies array to be: [getMyTweets]",{"range":"63","text":"64"},[640,642],"[getMyTweets]"]